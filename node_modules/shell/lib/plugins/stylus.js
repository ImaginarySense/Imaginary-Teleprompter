// Generated by CoffeeScript 1.4.0
var enrichFiles, path, start_stop;

path = require('path');

start_stop = require('../start_stop');

enrichFiles = function(files) {
  return files.split(' ').map(function(file) {
    path.normalize(file);
    if (file.substr(-1, 1) === '/') {
      file = file.substr(0, file.length - 1);
    }
    return file;
  }).join(' ');
};

/*

Stylus plugin
-------------
Start/stop a daemon to watch and convert stylus files to css.   

Options include:   
*   `output`  Output to <dir> when passing files.
*   `input`   Add <path> to lookup paths
*/


module.exports = function(settings) {
  var cmd, shell, _ref;
  if (settings == null) {
    settings = {};
  }
  if (!settings.shell) {
    throw new Error('No shell provided');
  }
  shell = settings.shell;
  if ((_ref = settings.workspace) == null) {
    settings.workspace = shell.set('workspace');
  }
  if (!settings.workspace) {
    throw new Error('No workspace provided');
  }
  cmd = function() {
    var args;
    args = [];
    args.push('-w');
    if (settings.use) {
      args.push('-u');
      args.push(enrichFiles(settings.use));
    }
    if (settings.output) {
      args.push('-o');
      args.push(enrichFiles(settings.output));
    }
    if (!settings.input) {
      settings.input = settings.workspace;
    }
    if (settings.input) {
      args.push(enrichFiles(settings.input));
    }
    return cmd = 'stylus ' + args.join(' ');
  };
  settings.cmd = cmd();
  shell.cmd('stylus start', 'Start CoffeeScript', function(req, res, next) {
    return start_stop.start(settings, function(err, pid) {
      var message;
      if (err) {
        return next(err);
      }
      if (!pid) {
        return res.cyan('Already Started').ln();
      }
      message = "Stylus started";
      res.cyan(message).ln();
      return res.prompt();
    });
  });
  return shell.cmd('stylus stop', 'Stop Stylus', function(req, res, next) {
    return start_stop.stop(settings, function(err, success) {
      if (success) {
        res.cyan('Stylus successfully stoped').ln();
      } else {
        res.magenta('Stylus was not started').ln();
      }
      return res.prompt();
    });
  });
};
